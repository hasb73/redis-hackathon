services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  redis-stack:
    image: redis/redis-stack:latest
    ports:
      - "6379:6379"  # Redis server
      - "8001:8001"  # RedisInsight UI
    volumes:
      - redis_data:/data
    environment:
      - REDIS_ARGS=--save 60 1000 --appendonly yes

  redis-ai:
    image: redislabs/redisai:latest
    ports:
      - "6380:6379"  # Redis AI server
    volumes:
      - redis_ai_data:/data
    environment:
      - REDIS_ARGS=--save 60 1000 --appendonly yes

  embedding:
    build: ./embedding_service
    ports:
      - "8000:8000"
    depends_on:
      - redis-stack

  log-analysis-chat:
    build: ./log-analysis-chat
    ports:
      - "8004:8004"  # Chat interface
    depends_on:
      - redis-stack
      - redis-ai
    volumes:
      - ./anomaly-detection-service:/app/anomaly-detection-service:ro

  grafana:
    image: grafana/grafana:latest
    container_name: anomaly-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Basic Grafana configuration
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      
      # Security settings
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_SECURITY_COOKIE_SECURE=false
      - GF_SECURITY_COOKIE_SAMESITE=lax
      
      # Plugin installation
      - GF_INSTALL_PLUGINS=frser-sqlite-datasource
      
      # Database settings
      - GF_DATABASE_TYPE=sqlite3
      - GF_DATABASE_PATH=/var/lib/grafana/grafana.db
      
      # Paths
      - GF_PATHS_DATA=/var/lib/grafana
      - GF_PATHS_LOGS=/var/log/grafana
      - GF_PATHS_PLUGINS=/var/lib/grafana/plugins
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      
      # Server settings
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
      
      # Analytics
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      
    volumes:
      # Mount the anomaly detection database
      - ./anomaly-detection-service/anomaly_detection.db:/var/lib/grafana/data/anomaly_detection.db:ro
      
      # Persistent Grafana data
      - grafana-data:/var/lib/grafana
      - grafana-logs:/var/log/grafana
      
      # Configuration provisioning
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
      
    networks:
      - grafana-network
    
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s


volumes:
  redis_data:
  redis_ai_data:
  grafana-data:
    driver: local
  grafana-logs:
    driver: local

networks:
  grafana-network:
    driver: bridge
